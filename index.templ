package main

import (
	"fmt"
	"strconv"
	"strings"
)

templ Layout() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<script src="https://unpkg.com/hyperscript.org@0.9.12"></script>
			<script src="https://cdn.tailwindcss.com"></script>
			<script src="https://unpkg.com/htmx.org@1.9.5" integrity="sha384-xcuj3WpfgjlKF+FXhSQFQ0ZNr39ln+hwjN3npfM9VBnUskLolQAcN80McRIVOPuO" crossorigin="anonymous"></script>
		</head>
		<body>
			@testComponent()
		</body>
	</html>
}

templ Workflows(i []Workflow) {
	<ul class="flex flex-col">
		for _, wf := range i {
			<li>
				ID: { strconv.Itoa(wf.Id) }
			</li>
			<li>
				Name: { wf.Name }
			</li>
			<li>
				Completion: { strconv.FormatBool(wf.Completion) }
			</li>
		}
	</ul>
}

templ templateArchive(i Archive) {
	{ fmt.Sprintf("%s\n%s\n%s\n", i.Name, strconv.Itoa(i.Id), i.Creation) }
}

templ Schedules(i []Schedule) {
	<ul>
		for _, s := range i {
			<li>{ fmt.Sprintf("%d-%s\n", s.Id, s.Name) }</li>
		}
	</ul>
}

templ listItem(s string) {
	<li
		class="flex gap-1 cursor-pointer"
		hx-get={ fmt.Sprintf("/%s", strings.ToLower(s)) }
		hx-target="#workspace"
		hx-trigger="click"
		hx-swap="innerHTML"
	>
		<div class="flex pl-6">
			@circle()
		</div>
		<div class="flex flex-none text-center justify-center transition-all delay-0 group-[.foo]:delay-100 ease-in-out invisible group-[.foo]:visible">
			{ s }
		</div>
	</li>
}

templ testComponent () {
	<div class="flex h-screen w-screen gap ">
		<div id="cool" class="flex group">
			<div id="cool" class="flex bg-zinc-900 text-gray-300 text-sm flex-col transition-all delay-100 ease-in-out  w-[76px] group-[.foo]:w-[160px]">
				<div id="1a" class="flex flex-col px-2 py-2 h-[128px]">
					[ logo ] 
					<div
						id="chevron"
						class="self-end px-2 py-2"
						hx-on:click="console.log('waaaat'); htmx.toggleClass(htmx.find('#cool'), 'foo')"
					>
						@Chevron()
					</div>
				</div>
				<div id="1b" class="flex flex-auto flex-col">
					<div id="1b1" class="flex flex-col">
						<ul class="flex flex-col gap-2 overflow-hidden">
							for _, item := range []string{"Workflows", "Schedules", "Archive"} {
								@listItem(item)
							}
							<hr class="w-full my-8 stroke-gray-700"/>
							@listItem("namespaces")
						</ul>
					</div>
					<div id="1b2" class="flex flex-col mt-auto  overflow-hidden">
						<div id="1b2a" class="">
							<ul>
								for _, item := range []string{"import", "verrry long stringviasdjaisjdiajsdijasidj", "labs off"} {
									@listItem(item)
								}
							</ul>
						</div>
					</div>
				</div>
				<div id="1c" class="flex py-6 items-end justify-center h-[160px]">
					2.18.1
				</div>
			</div>
		</div>
		<div class="flex flex-col  w-full">
			<div id="2" class="flex justify-end border-b-2 h-[50px]">
				<div id="2a" class="flex  h-[50px] w-[100px] gap-4 items-center justify-center mr-10">
					<div id="s-svg" class="border">
						[ S ] 
					</div>
					<div id="downbutton" class="border">
						x
					</div>
				</div>
			</div>
			<div id="3" class=" flex flex-col gap-4 h-4/5 w-full py-10 px-10">
				<div id="title" class=" py-2">
					Hello User: { GetUser(ctx).Name }
				</div>
				<div id="workspace" class=" h-[calc(100vh-238px)] w-full">
					Work Space
				</div>
			</div>
		</div>
	</div>
}

templ circle() {
	<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
		<path stroke-linecap="round" stroke-linejoin="round" d="M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125"></path>
	</svg>
}

templ Chevron() {
	<svg id="chev" name="foo" title="rawr" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="flex h-6 w-6 invisible group-[.foo]:rotate-180 group-hover:visible cursor-pointer">
		<path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5"></path>
	</svg>
}
